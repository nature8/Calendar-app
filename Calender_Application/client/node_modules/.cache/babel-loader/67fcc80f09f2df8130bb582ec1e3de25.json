{"ast":null,"code":"var _jsxFileName = \"D:\\\\New Volume2\\\\New folder\\\\Calender_Application\\\\client\\\\src\\\\components\\\\Calendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport enUS from 'date-fns/locale/en-US';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport Popping from './Popping';\nimport { closeEvent, ShowEventApi, ShowEventsApi } from \"../Redux/actions\";\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  'en-US': enUS\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\n\nconst MyCalendar = _ref => {\n  _s();\n\n  let {\n    events,\n    ShowEventApi,\n    closeEvent,\n    ShowEventsApi\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const [renderStatus, rerender] = useState(false);\n  useEffect(() => {\n    ShowEventsApi();\n    console.log(\"Rendered on refresh or start\");\n  }, []);\n  useEffect(() => {\n    ShowEventsApi();\n    console.log(\"Rendered due to renderStatus change\");\n  }, [renderStatus]);\n\n  const openEventClick = event => {\n    setOpen(true);\n\n    if (event.id) {\n      ShowEventApi(event.id);\n    }\n  };\n\n  const closeEventClick = () => {\n    setOpen(false);\n    setTimeout(() => closeEvent(), 300);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      color: 'white',\n      minHeight: '100vh',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Popping, {\n      open: open,\n      handleOpen: openEventClick,\n      handleClose: closeEventClick,\n      renderStatus: renderStatus,\n      rerender: rerender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500,\n        margin: 50,\n        color: 'white',\n        fontFamily: 'Patrick Hand'\n      },\n      onSelectEvent: openEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyCalendar, \"m/uK5ncrAmv+lQrWUmGifOuwKEE=\");\n\n_c = MyCalendar;\n\nfunction mapStateToProps(_ref2) {\n  let {\n    event,\n    events\n  } = _ref2;\n  return {\n    event,\n    events\n  };\n}\n\nexport default connect(mapStateToProps, {\n  ShowEventApi,\n  closeEvent,\n  ShowEventsApi\n})(MyCalendar);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","enUS","Popping","closeEvent","ShowEventApi","ShowEventsApi","connect","locales","localizer","MyCalendar","events","open","setOpen","renderStatus","rerender","console","log","openEventClick","event","id","closeEventClick","setTimeout","backgroundColor","color","minHeight","padding","height","margin","fontFamily","mapStateToProps"],"sources":["D:/New Volume2/New folder/Calender_Application/client/src/components/Calendar.jsx"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport enUS from 'date-fns/locale/en-US';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport Popping from './Popping';\nimport { closeEvent, ShowEventApi, ShowEventsApi } from \"../Redux/actions\";\nimport { connect } from 'react-redux';\n\nconst locales = {\n  'en-US': enUS,\n};\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales,\n});\n\nconst MyCalendar = ({ events, ShowEventApi, closeEvent, ShowEventsApi }) => {\n  const [open, setOpen] = useState(false);\n  const [renderStatus, rerender] = useState(false);\n\n  useEffect(() => {\n    ShowEventsApi();\n    console.log(\"Rendered on refresh or start\");\n  }, []);\n\n  useEffect(() => {\n    ShowEventsApi();\n    console.log(\"Rendered due to renderStatus change\");\n  }, [renderStatus]);\n\n  const openEventClick = (event) => {\n    setOpen(true);\n    if (event.id) {\n      ShowEventApi(event.id);\n    }\n  };\n\n  const closeEventClick = () => {\n    setOpen(false);\n    setTimeout(() => closeEvent(), 300);\n  };\n\n  return (\n    <div style={{ backgroundColor: 'black', color: 'white', minHeight: '100vh', padding: '20px' }}>\n      <Popping\n        open={open}\n        handleOpen={openEventClick}\n        handleClose={closeEventClick}\n        renderStatus={renderStatus}\n        rerender={rerender}\n      />\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500, margin: 50, color: 'white', fontFamily: 'Patrick Hand' }}\n        onSelectEvent={openEventClick}\n      />\n    </div>\n  );\n};\n\nfunction mapStateToProps({ event, events }) {\n  return {\n    event,\n    events,\n  };\n}\n\nexport default connect(mapStateToProps, { ShowEventApi, closeEvent, ShowEventsApi })(MyCalendar);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}